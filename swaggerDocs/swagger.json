{
  "swagger": "2.0",
  "info": {
    "description": "This is a template for an authorization API server",
    "version": "1.0.0",
    "title": "auth API",
    "contact": {
      "email": "applena@gmail.com"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "teams",
      "description": "Teams"
    },
    {
      "name": "players",
      "description": "Players"
    },
    {
      "name": "user",
      "description": "authenticate users"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/teams": {
      "get": {
        "tags": [
          "teams"
        ],
        "summary": "gets all the teams",
        "description": "",
        "operationId": "addPet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "teams"
        ],
        "summary": "Add a new team to the database",
        "description": "",
        "operationId": "addTeam",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/teams"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/teams/{id}": {
      "put": {
        "tags": [
          "teams"
        ],
        "summary": "Update an existing team",
        "description": "",
        "operationId": "updateTeam",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "team id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "team",
            "description": "team object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/teams"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "teams"
        ],
        "summary": "deletes a team",
        "description": "",
        "operationId": "deleteTeam",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "team to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/teams"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/players": {
      "get": {
        "tags": [
          "players"
        ],
        "summary": "gets all the players",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "players"
        ],
        "summary": "Add a new player to the database",
        "description": "",
        "operationId": "addPlayer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Pet object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/players"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/players/{id}": {
      "put": {
        "tags": [
          "players"
        ],
        "summary": "Update an existing player",
        "description": "",
        "operationId": "updatePlayer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "player id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "player",
            "description": "player object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/players"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "players"
        ],
        "summary": "deletes a player",
        "description": "",
        "operationId": "deletePlayer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "player to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/players"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "signs a user up",
        "description": "",
        "operationId": "signup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signup"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "signs a user in",
        "description": "",
        "operationId": "signin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signin"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/newRole": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "adds a new role",
        "description": "",
        "operationId": "newRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newRole"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/key": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "gets a key",
        "description": "",
        "operationId": "key",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "definitions": {
    "signin": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "signup": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "newRole": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "players": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "string",
          "enum": [
            "P",
            "C",
            "1B",
            "2B",
            "3B",
            "SS",
            "LF",
            "RF",
            "CF"
          ]
        },
        "throws": {
          "type": "string",
          "enum": [
            "R",
            "L"
          ]
        },
        "bats": {
          "type": "string",
          "enum": [
            "R",
            "L"
          ]
        },
        "team": {
          "type": "string"
        }
      }
    },
    "teams": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/teams"
        },
        "name": {
          "type": "string",
          "example": "CATS"
        }
      }
    }
  }
}